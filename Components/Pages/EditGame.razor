@page "/editgame"
@page "/editgame/{id:int}"

@inject NavigationManager NavigationManager
@inject GamesClient GamesClient
@inject GenresClient GenresClient

<PageTitle>@title</PageTitle>
<h3>@title</h3>

@if(genres is null || game is null){
    <p><em>Loading...</em></p>
}else{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="@game" FormName="editGame" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator/>
                <ValidationSummary/>
            <div class="mb-3">
                <label for="name" class="form-label">Name: </label>
                <InputText @bind-Value = "game.Name" class="form-control" id="name" />
                <ValidationMessage For="() => game.Name"/>
            </div>

            <div class="mb-3">
                <label for="genre" class="form-label">Genre: </label>
                <InputSelect @bind-Value = "game.GenreId" class="form-select" id="genre">
                    <option value="">Select a genre</option>
                    @foreach(var genre in genres){
                        <option value="@genre.Id">@genre.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => game.GenreId"/>
            </div>

            <div class="mb-3">
                <label for="price" class="form-label">Price </label>
                <InputNumber @bind-Value = "game.Price" class="form-control" id="price" />
                <ValidationMessage For="() => game.Price"/>
            </div>

            <div class="mb-3">
                <label for="releaseDate" class="form-label">Release-Date: </label>
                <InputDate @bind-Value = "game.ReleaseDate" class="form-control" id="releaseDate" />
            </div>

            <button type="submit" class="btn btn-primary">Save</button>

            <a role="button" href="/" class="btn btn-secondary">Cancel</a>
            </EditForm>
        </div>
    </div>
}


@code {
    
    [Parameter]
    public int? Id {get; set;}

    [SupplyParameterFromForm]
    private GameDetails? game {get; set;}

    private Genre[]? genres;
    private string title = string.Empty;

    protected override void OnParametersSet(){

        if(game is not null){
            return;
        }

        if(Id is not null){
            game = GamesClient.GetGame(Id.Value);
            title = $"Edit {game.Name}";
        }else{
            game = new(){
                Name = string.Empty,
                ReleaseDate = DateOnly.FromDateTime(DateTime.UtcNow)
            };
            title = "New Game";
        }
    }
    protected override void OnInitialized(){
        genres = GenresClient.GetGenres();
    }

    private void HandleSubmit(){
        ArgumentNullException.ThrowIfNull(game);

        if(Id is null){
            GamesClient.AddGame(game);
        }else{
            game.Id = Id.Value;
            GamesClient.UpdateGame(game);
        }

        NavigationManager.NavigateTo("/");
    }

}
   
